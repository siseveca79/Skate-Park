<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registro - Skate Park</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .form-container {
      max-width: 600px;
      margin: auto;
      padding: 15px;
      border: 1px solid #ccc;
      border-radius: 10px;
      background-color: #f9f9f9;
    }
    .form-group {
      margin-bottom: 1rem;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <h1 class="text-center">Skate Park</h1>
    <div class="py-4">
      <h2 class="text-center">Registro</h2>
      <hr class="w-50 mx-auto">
 
      <form id="registerForm" action="/register" method="POST" enctype="multipart/form-data" class="form-container">
        <div class="form-group">
          <label for="email">Email</label>
          <input id="email" type="email" class="form-control" name="email" required>
          <span class="error-message text-danger" id="emailError"></span>
        </div>
        <div class="form-group">
          <label for="nombre">Nombre</label>
          <input id="nombre" type="text" class="form-control" name="nombre" required>
          <span class="error-message text-danger" id="nombreError"></span>
        </div>
        <div class="form-group">
          <label for="password">Password</label>
          <div class="input-group">
            <input type="password" id="password" class="form-control" name="password" required>
            <div class="input-group-append">
              <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('password')">Mostrar/Ocultar</button>
            </div>
          </div>
          <span class="error-message text-danger" id="passwordError"></span>
        </div>
        <div class="form-group">
          <label for="password_repeat">Repita la password</label>
          <div class="input-group">
            <input type="password" id="password_repeat" class="form-control" name="password_repeat" required>
            <div class="input-group-append">
              <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('password_repeat')">Mostrar/Ocultar</button>
            </div>
          </div>
          <span class="error-message text-danger" id="passwordRepeatError"></span>
        </div>
        <div class="form-group">
          <label for="anos_experiencia">Años de experiencia</label>
          <input id="anos_experiencia" type="number" class="form-control" name="anos_experiencia" required>
          <span class="error-message text-danger" id="anosExperienciaError"></span>
        </div>
        <div class="form-group">
          <label for="especialidad">Especialidad</label>
          <input id="especialidad" type="text" class="form-control" name="especialidad" required>
          <span class="error-message text-danger" id="especialidadError"></span>
        </div>
        <div class="form-group">
          <label for="foto">Foto</label>
          <input type="file" id="foto" class="form-control" name="foto">
          <span class="error-message text-danger" id="fotoError"></span>
        </div>
        <button type="submit" class="btn btn-success btn-block">Registrar</button>
        <button type="button" class="btn btn-link btn-block" onclick="window.location.href='/login'">Iniciar sesión</button>
        <button type="button" class="btn btn-link btn-block" onclick="window.location.href='/'">Home</button>
      </form>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function initZod() {
      document.getElementById('registerForm').addEventListener('submit', async function(event) {
        event.preventDefault();

        const formData = new FormData(this);
        const formProps = Object.fromEntries(formData);

        try {
          const registerSchema = z.object({
            email: z.string().email({ message: "El email no es válido" }),
            nombre: z.string()
              .nonempty({ message: "El nombre es requerido" })
              .min(2, { message: "El nombre debe tener al menos 2 caracteres" })
              .regex(/^[a-zA-Z\s]+$/, { message: "El nombre solo puede contener letras y espacios" }),
            password: z.string()
              .min(6, { message: "La contraseña debe tener al menos 6 caracteres" })
              .regex(/[A-Za-z]/, { message: "La contraseña debe contener al menos una letra" })
              .regex(/[0-9]/, { message: "La contraseña debe contener al menos un número" })
              .regex(/[\W_]/, { message: "La contraseña debe contener al menos un carácter especial" }),
            password_repeat: z.string().min(6, { message: "Repetir la contraseña es requerido" }),
            anos_experiencia: z.preprocess((val) => parseInt(val, 10), z.number().int().min(0, { message: "Los años de experiencia deben ser un número positivo" })),
            especialidad: z.string()
              .nonempty({ message: "La especialidad es requerida" })
              .min(2, { message: "La especialidad debe tener al menos 2 caracteres" })
              .regex(/^[a-zA-Z\s]+$/, { message: "La especialidad solo puede contener letras y espacios" }),
            foto: z.any().optional(),
          }).refine((data) => data.password === data.password_repeat, {
            message: "Las contraseñas no coinciden",
            path: ["password_repeat"],
          });

          const validationResult = registerSchema.safeParse(formProps);

          if (!validationResult.success) {
            const errors = validationResult.error.format();

            // Clear previous error messages
            document.querySelectorAll('.error-message').forEach(function(element) {
              element.textContent = '';
            });

            // Display error messages
            for (const key in errors) {
              if (errors.hasOwnProperty(key)) {
                document.getElementById(`${key}Error`).textContent = errors[key]._errors.join(', ');
              }
            }
          } else {
            this.submit();
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });

      document.getElementById('password').addEventListener('input', validatePasswords);
      document.getElementById('password_repeat').addEventListener('input', validatePasswords);
    }

    function validatePasswords() {
      const password = document.getElementById('password').value;
      const passwordRepeat = document.getElementById('password_repeat').value;

      if (password !== passwordRepeat) {
        document.getElementById('passwordRepeatError').textContent = 'Las contraseñas no coinciden';
      } else {
        document.getElementById('passwordRepeatError').textContent = '';
      }
    }

    function togglePasswordVisibility(id) {
      const input = document.getElementById(id);
      if (input.type === 'password') {
        input.type = 'text';
      } else {
        input.type = 'password';
      }
    }
  </script>
</body>
</html>
